name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Display current directory and list files
      run: |
        echo "Current directory: $(pwd)"
        ls -la

    # Create the SSH directory and set up known_hosts
    - name: Set up SSH directory and known_hosts
      run: |
        mkdir -p ~/.ssh
        touch ~/.ssh/known_hosts
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts
        ls -la ~/.ssh  # Debugging step

    # Write the SSH key into the SSH agent directly, without writing to a file
    - name: Add SSH Key to Agent from Environment Variable
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        eval "$(ssh-agent -s)"
        echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
        ssh-add -l  # List loaded identities to confirm the key was added

    - name: Cache Pre-Commit Environments
      uses: actions/cache@v2
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pre-commit-

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Install Pre-Commit and Run Hooks
    - name: Install Pre-Commit and Run Hooks
      run: |
        pre-commit install
        pre-commit run --all-files

    # Debugging step: Display Pre-Commit log on failure
    - name: Display Pre-Commit Log (on failure)
      if: failure()
      run: |
        cat precommit_debug.log || echo "No pre-commit log found"

    # Run unit tests
    - name: Run Tests
      run: |
        pytest tests/ --disable-warnings

    # Run coverage report
    - name: Run Coverage
      run: |
        coverage run -m pytest
        coverage report

    # Analyze code complexity using Radon
    - name: Analyze Code Complexity (Radon)
      run: |
        radon cc src/ -s -n C
        radon mi src/
