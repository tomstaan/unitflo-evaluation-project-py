name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    # Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Debug current directory and list files
    - name: Show current directory and list files
      run: |
        echo "Current directory: $(pwd)"
        ls -la

    # Write the SSH key to the ~/.ssh directory and set correct permissions
    - name: Write SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        ls -la ~/.ssh
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

    # Add SSH key to ssh-agent and verify
    - name: Add SSH Key to Agent
      run: |
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_ed25519
        ssh-add -l  # Verify the key has been added
        echo "SSH key successfully added to the agent."

    # Set up GIT_SSH_COMMAND for further steps
    - name: Set GIT_SSH_COMMAND
      run: |
        export GIT_SSH_COMMAND="ssh -i ~/.ssh/id_ed25519 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
        echo "GIT_SSH_COMMAND set."

    # Cache Pre-Commit Environments to avoid repeated setup
    - name: Cache Pre-Commit Environments
      uses: actions/cache@v2
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pre-commit-

    # Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    # Install dependencies and show detailed logs
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip freeze  # Show installed packages

    # Install Pre-Commit and Run Hooks with debug
    - name: Install Pre-Commit and Run Hooks
      run: |
        echo "Running pre-commit installation."
        GIT_SSH_COMMAND="ssh -i ~/.ssh/id_ed25519 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" pre-commit install
        echo "Running pre-commit hooks."
        GIT_SSH_COMMAND="ssh -i ~/.ssh/id_ed25519 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" pre-commit run --all-files

    # Run unit tests with detailed logs
    - name: Run Tests
      run: |
        echo "Running tests with pytest."
        pytest tests/ --disable-warnings
        echo "Tests completed."

    # Run Coverage report
    - name: Run Coverage
      run: |
        echo "Running coverage report."
        coverage run -m pytest
        coverage report

    # Analyze code complexity using Radon
    - name: Analyze Code Complexity (Radon)
      run: |
        echo "Running Radon to check cyclomatic complexity."
        radon cc src/ -s -n C
        echo "Running Radon to check maintainability index."
        radon mi src/
