name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    - uses: actions/checkout@v3

    # Use PAT for Git operations
    - name: Set up Git to use PAT
      run: |
        git config --global url."https://x-access-token:${{ secrets.GH_PAT }}@github.com/".insteadOf "https://github.com/"

    # Write the SSH key to the ~/.ssh directory and set correct permissions
    - name: Write SSH Key
      run: |
        mkdir -p ~/.ssh
        echo "$CI_SSH_PRIVATE_KEY" > ~/.ssh/id_ed25519
        chmod 600 ~/.ssh/id_ed25519
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        ls -la ~/.ssh

      env:
        CI_SSH_PRIVATE_KEY: ${{ secrets.CI_SSH_PRIVATE_KEY }}

    # Add SSH key to ssh-agent and verify
    - name: Add SSH Key to Agent
      run: |
        eval "$(ssh-agent -s)"
        ssh-add ~/.ssh/id_ed25519
        ssh-add -l  # Verify the key has been added

    # Set up GIT_SSH_COMMAND and use it for the following steps
    - name: Set GIT_SSH_COMMAND
      run: |
        export GIT_SSH_COMMAND="ssh -i ~/.ssh/id_ed25519 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no"
        echo $GIT_SSH_COMMAND

    # Cache Pre-Commit Environments to avoid repeated setup
    - name: Cache Pre-Commit Environments
      uses: actions/cache@v2
      with:
        path: ~/.cache/pre-commit
        key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pre-commit-

    # Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    # Install dependencies
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    # Install Pre-Commit and Run Hooks
    - name: Install Pre-Commit and Run Hooks
      run: |
        GIT_SSH_COMMAND="ssh -i ~/.ssh/id_ed25519 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" pre-commit install
        GIT_SSH_COMMAND="ssh -i ~/.ssh/id_ed25519 -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no" pre-commit run --all-files

    # Run Tests
    - name: Run Tests
      run: |
        pytest tests/ --disable-warnings

    # Run Coverage
    - name: Run Coverage
      run: |
        coverage run -m pytest
        coverage report
