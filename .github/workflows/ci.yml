name: CI - Pre-Commit with GitHub Token

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9]

    steps:
    # 1. Checkout the code using GitHub token
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    # 2. Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    # 3. Install dependencies
    - name: Install dependencies
      run: |
        echo "Installing dependencies..."
        python -m pip install --upgrade pip
        pip install -r requirements.txt || { echo "Dependency installation failed."; exit 1; }

    # 4. Configure Git to use the GitHub Token for HTTPS authentication
    - name: Configure Git for Authentication
      run: |
        echo "Configuring Git for Authentication with GITHUB_TOKEN..."
        git config --global url."https://github.com/".insteadOf "git@github.com:"
        git config --global http.https://github.com/.extraheader "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}"
        git config --list
        echo "Git configuration completed."

    # 5. Install Pre-Commit Hooks
    - name: Install Pre-Commit Hooks
      run: |
        echo "Installing pre-commit hooks..."
        pre-commit install || { echo "Pre-commit installation failed."; exit 1; }

    # 6. Run Pre-Commit Hooks
    - name: Run Pre-Commit Hooks
      run: |
        echo "Running pre-commit hooks..."
        pre-commit run --all-files --show-diff-on-failure --verbose || { echo "Pre-commit hooks failed."; exit 1; }

    # 7. Debug Pre-Commit Log if it fails
    - name: Debug Pre-Commit Log
      if: failure()
      run: |
        echo "Pre-commit failed, checking log..."
        cat /home/runner/.cache/pre-commit/pre-commit.log || echo "No pre-commit log found."

    # 8. Run unit tests
    - name: Run Tests
      run: |
        echo "Running tests..."
        pytest tests/ --disable-warnings || { echo "Tests failed."; exit 1; }
